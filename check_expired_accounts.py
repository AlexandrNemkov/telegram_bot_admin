#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏—Å—Ç–µ–∫—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
"""

import os
import sys
from datetime import datetime
from database import Database
from bot.telegram_bot import TelegramBot

def check_expired_accounts():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∏—Å—Ç–µ–∫—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤...")
    
    db = Database()
    
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–µ–∫—à–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã
    expired_accounts = db.get_expired_accounts()
    
    if not expired_accounts:
        print("‚úÖ –ò—Å—Ç–µ–∫—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return
    
    print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {len(expired_accounts)} –∏—Å—Ç–µ–∫—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤:")
    
    for account in expired_accounts:
        print(f"  üë§ {account['username']} - {account['full_name'] or '–ë–µ–∑ –∏–º–µ–Ω–∏'}")
        print(f"     üìÖ –ò—Å—Ç–µ–∫: {account['account_expires']}")
    
    # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∏—Å—Ç–µ–∫—à–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã
    deactivated_count = db.deactivate_expired_accounts()
    print(f"‚úÖ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ {deactivated_count} –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (–µ—Å–ª–∏ –µ—Å—Ç—å Telegram ID)
    if expired_accounts:
        print("üì± –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏...")
        send_expiry_notifications(expired_accounts)

def send_expiry_notifications(expired_accounts):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    try:
        bot = TelegramBot()
        
        for account in expired_accounts:
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
            print(f"  üì® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {account['username']}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")

def get_account_status():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    print("üìä –°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–æ–≤:")
    
    db = Database()
    users = db.get_all_system_users()
    
    if not users:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    active_count = 0
    expired_count = 0
    admin_count = 0
    
    for user in users:
        if user['role'] == 'admin':
            admin_count += 1
        elif user['is_active']:
            active_count += 1
        else:
            expired_count += 1
    
    print(f"üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {admin_count}")
    print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {active_count}")
    print(f"‚è∞ –ò—Å—Ç–µ–∫—à–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã: {expired_count}")
    print(f"üìà –í—Å–µ–≥–æ: {len(users)}")

if __name__ == "__main__":
    if len(sys.argv) > 1:
        if sys.argv[1] == "status":
            get_account_status()
        else:
            print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
            print("  python3 check_expired_accounts.py          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å")
            print("  python3 check_expired_accounts.py status  # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å")
    else:
        check_expired_accounts()
