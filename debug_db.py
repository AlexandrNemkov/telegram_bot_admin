#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os
from database import Database

def debug_database():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db_path = 'data/bot.db'
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î –Ω–∞–ø—Ä—è–º—É—é
    with sqlite3.connect(db_path) as conn:
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()
        print(f"üìã –¢–∞–±–ª–∏—Ü—ã –≤ –ë–î: {[t[0] for t in tables]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("SELECT COUNT(*) FROM users")
        users_count = cursor.fetchone()[0]
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: {users_count}")
        
        if users_count > 0:
            cursor.execute("SELECT id, username, first_name, last_name, full_name FROM users LIMIT 5")
            users = cursor.fetchall()
            print("üìù –ü—Ä–∏–º–µ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
            for user in users:
                print(f"  ID: {user[0]}, Username: {user[1]}, First: {user[2]}, Last: {user[3]}, Full: {user[4]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        cursor.execute("SELECT COUNT(*) FROM messages")
        messages_count = cursor.fetchone()[0]
        print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–π –≤ –ë–î: {messages_count}")
        
        if messages_count > 0:
            cursor.execute("SELECT user_id, text, is_from_user, timestamp FROM messages LIMIT 5")
            messages = cursor.fetchall()
            print("üì® –ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π:")
            for msg in messages:
                print(f"  User: {msg[0]}, Text: {msg[1][:50]}..., From User: {msg[2]}, Time: {msg[3]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        cursor.execute("SELECT COUNT(*) FROM settings")
        settings_count = cursor.fetchone()[0]
        print(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–µ–∫ –≤ –ë–î: {settings_count}")
        
        if settings_count > 0:
            cursor.execute("SELECT key, value FROM settings")
            settings = cursor.fetchall()
            print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
            for setting in settings:
                print(f"  {setting[0]}: {setting[1]}")
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å Database...")
    
    try:
        db = Database()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = db.get_all_users()
        print(f"üìä get_all_users() –≤–µ—Ä–Ω—É–ª {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        if users:
            print("üìù –ü–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
            user = users[0]
            for key, value in user.items():
                print(f"  {key}: {value}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
        if users:
            user_id = users[0]['id']
            messages = db.get_user_messages(user_id)
            print(f"üí¨ get_user_messages({user_id}) –≤–µ—Ä–Ω—É–ª {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
            
            if messages:
                print("üì® –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
                msg = messages[0]
                for key, value in msg.items():
                    print(f"  {key}: {value}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Database: {e}")

if __name__ == "__main__":
    debug_database()
