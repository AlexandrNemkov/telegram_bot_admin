#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∏–∑ Telegram API
"""

import os
import sys
import requests
from database import Database
from config import Config

def update_user_info():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∏–∑ Telegram API"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    if not hasattr(Config, 'TELEGRAM_TOKEN') or not Config.TELEGRAM_TOKEN:
        print("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ config.py")
        return
    
    token = Config.TELEGRAM_TOKEN
    db = Database()
    
    print("üîç –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ë–î...")
    users = db.get_all_users()
    
    if not users:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ë–î")
        return
    
    print(f"üë• –ù–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    updated_count = 0
    error_count = 0
    
    for user in users:
        user_id = user['id']
        print(f"\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}...")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ Telegram API
            url = f"https://api.telegram.org/bot{token}/getChat"
            data = {'chat_id': user_id}
            
            response = requests.post(url, data=data, timeout=10)
            
            if response.status_code == 200:
                result = response.json()
                if result.get('ok'):
                    user_data = result['result']
                    
                    username = user_data.get('username')
                    first_name = user_data.get('first_name', '')
                    last_name = user_data.get('last_name', '')
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ë–î
                    if db.add_user(user_id, username, first_name, last_name):
                        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: {first_name} {last_name} (@{username})")
                        updated_count += 1
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –ë–î")
                        error_count += 1
                else:
                    print(f"‚ùå API –æ—à–∏–±–∫–∞: {result.get('description', 'Unknown error')}")
                    error_count += 1
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                error_count += 1
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            error_count += 1
    
    print(f"\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {error_count}")
    
    if updated_count > 0:
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
        users_after = db.get_all_users()
        for user in users_after[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"  ID: {user['id']}, Name: {user['full_name'] or 'N/A'}, Username: @{user['username'] or 'N/A'}")

if __name__ == "__main__":
    update_user_info()
